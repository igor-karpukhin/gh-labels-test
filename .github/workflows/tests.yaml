name: PR Test Runner

# This is a prototype to run tests based on PR labels

on:
  pull_request:
    types: [opened, synchronize, labeled, unlabeled]

jobs:
  detect-tests:
    name: "Detect tests"
    runs-on: ubuntu-latest
    outputs:
      int_matrix: ${{ steps.set-matrix.outputs.int_matrix }}
      e2e_matrix: ${{ steps.set-matrix.outputs.e2e_matrix }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.23

      - name: Install Ginkgo
        run: go install github.com/onsi/ginkgo/v2/ginkgo@latest

      - name: Get PR labels
        id: get-labels
        uses: actions/github-script@v7
        with:
          script: |
            const labels = context.payload.pull_request.labels.map(label => label.name);
            console.log("PR Labels:", labels);
            core.setOutput("pr_labels", JSON.stringify(labels));

      - name: List available Ginkgo test labels
        id: fetch-labels
        run: |
          INT_LABELS=$(cd ./test/int && ginkgo labels | jq -s -c)
          E2E_LABELS=$(cd ./test/e2e && ginkgo labels | jq -s -c)

          echo "int_labels=$INT_LABELS" >> $GITHUB_ENV
          echo "e2e_labels=$E2E_LABELS" >> $GITHUB_ENV

      - name: Compute test matrix
        id: set-matrix
        uses: actions/github-script@v7
        env:
          INT_LABELS: ${{ env.int_labels }}
          E2E_LABELS: ${{ env.e2e_labels }}
        with:
          script: |
            function matchWildcards(labels, testLabels, testType) {
              let matchedLabels = new Set();
            
              for (let i = 0; i < labels.length; i++) {
                let label = labels[i];
            
                if (label === `test/${testType}/*`) {
                  testLabels.forEach(test => matchedLabels.add(test));
                } else {
                  let prefixMatch = label.match(new RegExp(`^test/${testType}/(.+)$`));
                  if (prefixMatch) {
                    let pattern = new RegExp(`^${prefixMatch[1].replace(/\*/g, ".*")}$`);
                    testLabels.forEach(test => {
                      if (pattern.test(test)) {
                        matchedLabels.add(test);
                      }
                    });
                  }
                }
              }
              return [...matchedLabels];
            }

            const prLabels = JSON.parse(`${{ steps.get-labels.outputs.pr_labels }}` || "[]");
            const intTests = JSON.parse(process.env.INT_LABELS || "[]");
            const e2eTests = JSON.parse(process.env.E2E_LABELS || "[]");

            const matchedIntTests = matchWildcards(prLabels, intTests, "int");
            const matchedE2ETests = matchWildcards(prLabels, e2eTests, "e2e");

            console.log("Matched Integration Tests:", matchedIntTests);
            console.log("Matched E2E Tests:", matchedE2ETests);

            core.setOutput("int_matrix", JSON.stringify(matchedIntTests));
            core.setOutput("e2e_matrix", JSON.stringify(matchedE2ETests));

  run-integration-tests:
    needs: detect-tests
    if: ${{ fromJSON(needs.detect-tests.outputs.int_matrix) != '[]' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        test: ${{ fromJSON(needs.detect-tests.outputs.int_matrix) }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup GO
        uses: actions/setup-go@v4
        with:
          go-version: 1.23

      - name: Install Ginkgo
        run: go install github.com/onsi/ginkgo/v2/ginkgo@latest

      - name: Run Integration Tests
        run: |
          cd ./test/int
          ginkgo --label-filter="${{ matrix.test }}" -r --fail-fast

  run-e2e-tests:
    needs: detect-tests
    if: ${{ fromJSON(needs.detect-tests.outputs.e2e_matrix) != '[]' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        test: ${{ fromJSON(needs.detect-tests.outputs.e2e_matrix) }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup GO
        uses: actions/setup-go@v4
        with:
          go-version: 1.23

      - name: Install Ginkgo
        run: go install github.com/onsi/ginkgo/v2/ginkgo@latest

      - name: Run E2E Tests
        run: |
          cd ./test/e2e
          ginkgo --label-filter="${{ matrix.test }}" -r --fail-fast
